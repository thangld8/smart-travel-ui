{"ast":null,"code":"import _classCallCheck from \"/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/src/Map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nvar mapStyle = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\nexport var CurrentLocation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CurrentLocation, _React$Component);\n\n  function CurrentLocation(props) {\n    var _this;\n\n    _classCallCheck(this, CurrentLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrentLocation).call(this, props));\n    var _this$props$initialCe = _this.props.initialCenter,\n        lat = _this$props$initialCe.lat,\n        lng = _this$props$initialCe.lng;\n    _this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CurrentLocation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(111222, this.props);\n\n      if (this.props.centerAroundCurrentLocation) {\n        console.log(1111333, navigator);\n\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this2.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n\n      this.loadMap();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = this.props.zoom;\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      console.log(111112, current);\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this3.map,\n          google: _this3.props.google,\n          mapCenter: _this3.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = Object.assign({}, mapStyle.map);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: style,\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  return CurrentLocation;\n}(React.Component);\nexport default CurrentLocation;\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 21.032112,\n    lng: 105.829154\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"sources":["/Users/vanlong_nguyen/Documents/workspace/Investigation/sU/front-end-su/src/Map.js"],"names":["React","ReactDOM","mapStyle","map","position","width","height","CurrentLocation","props","initialCenter","lat","lng","state","currentLocation","console","log","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","loadMap","prevProps","prevState","google","recenterMap","maps","mapRef","refs","node","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","Map","current","panTo","children","Children","c","cloneElement","mapCenter","style","renderChildren","Component","defaultProps","visible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyle = {\n    map: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n    }\n}\n\nexport class CurrentLocation extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      const { lat, lng } = this.props.initialCenter;\n      this.state = {\n        currentLocation: {\n          lat: lat,\n          lng: lng\n        }\n      };\n    }\n    componentDidMount() {\n        console.log(111222, this.props)\n      if (this.props.centerAroundCurrentLocation) {\n        console.log(1111333, navigator)\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(pos => {\n            const coords = pos.coords;\n            this.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n      this.loadMap();\n    }\n  \n    componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  \n    loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        const { google } = this.props;\n        const maps = google.maps;\n  \n        const mapRef = this.refs.map;\n  \n        // reference to the actual DOM element\n        const node = ReactDOM.findDOMNode(mapRef);\n  \n        let { zoom } = this.props;\n        const { lat, lng } = this.state.currentLocation;\n        const center = new maps.LatLng(lat, lng);\n        const mapConfig = Object.assign(\n          {},\n          {\n            center: center,\n            zoom: zoom\n          }\n        );\n        // maps.Map() is constructor that instantiates the map\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  \n    recenterMap() {\n      const map = this.map;\n      const current = this.state.currentLocation;\n      console.log(111112, current);\n      const google = this.props.google;\n      const maps = google.maps;\n  \n      if (map) {\n        let center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  \n    renderChildren() {\n      const { children } = this.props;\n  \n      if (!children) return;\n  \n      return React.Children.map(children, c => {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: this.map,\n          google: this.props.google,\n          mapCenter: this.state.currentLocation\n        });\n      });\n    }\n  \n    render() {\n      const style = Object.assign({}, mapStyle.map);\n  \n      return (\n        <div>\n          <div style={style} ref=\"map\">\n            Loading map...\n          </div>\n          {this.renderChildren()}\n        </div>\n      );\n    }\n  }\n  export default CurrentLocation;\n  \n  CurrentLocation.defaultProps = {\n    zoom: 14,\n    initialCenter: {\n      lat: 21.032112,\n      lng: 105.829154\n    },\n    centerAroundCurrentLocation: false,\n    visible: true\n  };"]},"metadata":{},"sourceType":"module"}